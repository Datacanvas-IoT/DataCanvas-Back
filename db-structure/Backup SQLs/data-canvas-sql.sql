-- MySQL Script generated by MySQL Workbench
-- Fri Dec 22 07:51:45 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema platform
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `platform` ;

-- -----------------------------------------------------
-- Schema platform
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `platform` DEFAULT CHARACTER SET utf8 ;
USE `platform` ;

-- -----------------------------------------------------
-- Table `platform`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`user` ;

CREATE TABLE IF NOT EXISTS `platform`.`user` (
  `user_id` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `platform`.`project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`project` ;

CREATE TABLE IF NOT EXISTS `platform`.`project` (
  `project_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  `fingerprint` VARCHAR(40) NOT NULL,
  `user` INT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`project_id`),
  UNIQUE INDEX `project_id_UNIQUE` (`project_id` ASC) VISIBLE,
  INDEX `user_id_idx` (`user` ASC) VISIBLE,
  CONSTRAINT `user_id_fk`
    FOREIGN KEY (`user`)
    REFERENCES `platform`.`user` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `platform`.`device`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`device` ;

CREATE TABLE IF NOT EXISTS `platform`.`device` (
  `device_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `fingerprint` VARCHAR(40) NOT NULL,
  `project` INT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`device_id`),
  UNIQUE INDEX `device_id_UNIQUE` (`device_id` ASC) VISIBLE,
  INDEX `project_id_fk_idx` (`project` ASC) VISIBLE,
  CONSTRAINT `project_id_fk`
    FOREIGN KEY (`project`)
    REFERENCES `platform`.`project` (`project_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `platform`.`data_table`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`data_table` ;

CREATE TABLE IF NOT EXISTS `platform`.`data_table` (
  `table_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(10) NOT NULL,
  `project` INT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`table_id`),
  UNIQUE INDEX `table_id_UNIQUE` (`table_id` ASC) VISIBLE,
  INDEX `project_id_fk_idx` (`project` ASC) VISIBLE,
  CONSTRAINT `project_id_fk`
    FOREIGN KEY (`project`)
    REFERENCES `platform`.`project` (`project_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `platform`.`data_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`data_type` ;

CREATE TABLE IF NOT EXISTS `platform`.`data_type` (
  `datatype_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(10) NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`datatype_id`),
  UNIQUE INDEX `datatype_id_UNIQUE` (`datatype_id` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `platform`.`column`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`column` ;

CREATE TABLE IF NOT EXISTS `platform`.`column` (
  `column_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NOT NULL,
  `data_type` INT NOT NULL,
  `table` INT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`column_id`),
  UNIQUE INDEX `column_id_UNIQUE` (`column_id` ASC) VISIBLE,
  INDEX `table_id_fk_idx` (`table` ASC) VISIBLE,
  INDEX `data_type_id_fk_idx` (`data_type` ASC) VISIBLE,
  CONSTRAINT `table_id_fk`
    FOREIGN KEY (`table`)
    REFERENCES `platform`.`data_table` (`table_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `data_type_id_fk`
    FOREIGN KEY (`data_type`)
    REFERENCES `platform`.`data_type` (`datatype_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `platform`.`constraint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`constraint` ;

CREATE TABLE IF NOT EXISTS `platform`.`constraint` (
  `constraint_id` INT NOT NULL,
  `name` VARCHAR(10) NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`constraint_id`));


-- -----------------------------------------------------
-- Table `platform`.`constraint_column`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`constraint_column` ;

CREATE TABLE IF NOT EXISTS `platform`.`constraint_column` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `column` INT NOT NULL,
  `constraint` INT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `column_id_fk_idx` (`column` ASC) VISIBLE,
  INDEX `constraint_id_fk_idx` (`constraint` ASC) VISIBLE,
  CONSTRAINT `column_id_fk`
    FOREIGN KEY (`column`)
    REFERENCES `platform`.`column` (`column_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `constraint_id_fk`
    FOREIGN KEY (`constraint`)
    REFERENCES `platform`.`constraint` (`constraint_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `platform`.`widget`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`widget` ;

CREATE TABLE IF NOT EXISTS `platform`.`widget` (
  `widget_id` INT NOT NULL AUTO_INCREMENT,
  `dataset` INT NOT NULL,
  `type` VARCHAR(25) NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`widget_id`),
  UNIQUE INDEX `widget_id_UNIQUE` (`widget_id` ASC) VISIBLE,
  INDEX `dataset_id_fk_idx` (`dataset` ASC) VISIBLE,
  CONSTRAINT `dataset_id_fk`
    FOREIGN KEY (`dataset`)
    REFERENCES `platform`.`data_table` (`table_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `platform`.`variation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`variation` ;

CREATE TABLE IF NOT EXISTS `platform`.`variation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `widget_id` INT NOT NULL,
  `x_parameter` INT NOT NULL,
  `type` INT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `x_param_id_fk_idx` (`x_parameter` ASC) VISIBLE,
  CONSTRAINT `widget_id_fk`
    FOREIGN KEY (`widget_id`)
    REFERENCES `platform`.`widget` (`widget_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `x_param_id_fk`
    FOREIGN KEY (`x_parameter`)
    REFERENCES `platform`.`column` (`column_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `platform`.`y_parameter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`y_parameter` ;

CREATE TABLE IF NOT EXISTS `platform`.`y_parameter` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `variation_id` INT NOT NULL,
  `column` INT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `variation_id_fk_idx` (`variation_id` ASC) VISIBLE,
  INDEX `column_id_fk_idx` (`column` ASC) VISIBLE,
  CONSTRAINT `variation_id_fk`
    FOREIGN KEY (`variation_id`)
    REFERENCES `platform`.`variation` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `column_id_fk`
    FOREIGN KEY (`column`)
    REFERENCES `platform`.`column` (`column_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `platform`.`stack_parameters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`stack_parameters` ;

CREATE TABLE IF NOT EXISTS `platform`.`stack_parameters` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `widget_id` INT NOT NULL,
  `column` INT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `widget_id_fk_idx` (`widget_id` ASC) VISIBLE,
  INDEX `column_id_fk_idx` (`column` ASC) VISIBLE,
  CONSTRAINT `widget_id_fk`
    FOREIGN KEY (`widget_id`)
    REFERENCES `platform`.`widget` (`widget_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `column_id_fk`
    FOREIGN KEY (`column`)
    REFERENCES `platform`.`column` (`column_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `platform`.`toggle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`toggle` ;

CREATE TABLE IF NOT EXISTS `platform`.`toggle` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `widget_id` INT NOT NULL,
  `parameter` INT NOT NULL,
  `write_enabled` TINYINT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `parameter_id_fk_idx` (`parameter` ASC) VISIBLE,
  CONSTRAINT `widget_id_fk`
    FOREIGN KEY (`widget_id`)
    REFERENCES `platform`.`widget` (`widget_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `parameter_id_fk`
    FOREIGN KEY (`parameter`)
    REFERENCES `platform`.`column` (`column_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `platform`.`gauge`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `platform`.`gauge` ;

CREATE TABLE IF NOT EXISTS `platform`.`gauge` (
  `id` VARCHAR(45) NOT NULL,
  `widget_id` INT NOT NULL,
  `parameter` INT NOT NULL,
  `max` DOUBLE NOT NULL,
  `type` INT NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `parameter_id_fk_idx` (`parameter` ASC) VISIBLE,
  CONSTRAINT `widget_id_fk`
    FOREIGN KEY (`widget_id`)
    REFERENCES `platform`.`widget` (`widget_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `parameter_id_fk`
    FOREIGN KEY (`parameter`)
    REFERENCES `platform`.`column` (`column_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
